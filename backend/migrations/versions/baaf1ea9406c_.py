"""empty message

Revision ID: baaf1ea9406c
Revises: b84d475bb4d5
Create Date: 2017-08-12 21:49:50.065665

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'baaf1ea9406c'
down_revision = 'b84d475bb4d5'
branch_labels = None
depends_on = None

# Tip:
# https://stackoverflow.com/questions/31600468/error-while-trying-to-migrate-database-slalchemy-slqite3

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_country_country", ['country'])

    with op.batch_alter_table('reason', schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_reason_reason", ['reason'])

    with op.batch_alter_table('record_called', schema=None) as batch_op:
        batch_op.alter_column('country_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('reason_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('type_called_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('type_called', schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_type_type", ['type'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('type_called', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('record_called', schema=None) as batch_op:
        batch_op.alter_column('type_called_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('reason_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('country_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('reason', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
